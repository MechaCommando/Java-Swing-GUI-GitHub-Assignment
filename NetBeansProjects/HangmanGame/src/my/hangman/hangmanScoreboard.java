/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package my.hangman;

import java.util.Arrays;
import java.util.*;
import java.util.Random;

/**
 *
 * @author Yahya
 */
public class hangmanScoreboard extends javax.swing.JFrame {

    public static List<String> nameList = new ArrayList<>();
    public static int scoreNum = 1;
    /**
     * Creates new form hangmanScoreboard
     */
    public hangmanScoreboard() {
        initComponents();
        setTheName();
    }
    
    public static void setTheName(){
        if (!mainHangmanUI.winnerName.equals("BLANK")){
            if (!hangmanUI.userName.equals("Please enter your User Name!")){
                nameList.add(hangmanUI.userName);
            } else {
                nameList.add("Anonymous");
            }
            nameList.add(String.valueOf(mainHangmanUI.mistakes));
            
            if (nameList.size() == 2){
                jLabel1.setText(nameList.get(0));
                jLabel2.setText(nameList.get(1));
            } else if (nameList.size() == 4){
                int num1 = Integer.valueOf(nameList.get(1));
                int num2 = Integer.valueOf(nameList.get(3));
                if (num1 < num2){
                    jLabel1.setText(nameList.get(0));
                    jLabel2.setText(nameList.get(1));
                    jLabel3.setText(nameList.get(2));
                    jLabel4.setText(nameList.get(3)); 
                } else {
                    jLabel1.setText(nameList.get(2));
                    jLabel2.setText(nameList.get(3));
                    jLabel3.setText(nameList.get(0));
                    jLabel4.setText(nameList.get(1)); 
                }
            } else if (nameList.size() == 6){
                int num1 = Integer.valueOf(nameList.get(1));
                int num2 = Integer.valueOf(nameList.get(3));
                int num3 = Integer.valueOf(nameList.get(5));
                if (num1 < num2 && num1 < num3){
                    jLabel1.setText(nameList.get(0));
                    jLabel2.setText(nameList.get(1));
                    if (num2 < num3){
                        jLabel3.setText(nameList.get(2));
                        jLabel4.setText(nameList.get(3)); 
                        jLabel5.setText(nameList.get(4));
                        jLabel6.setText(nameList.get(5));  
                    } else if (num3 < num2){
                        jLabel3.setText(nameList.get(4));
                        jLabel4.setText(nameList.get(5)); 
                        jLabel5.setText(nameList.get(2));
                        jLabel6.setText(nameList.get(3));  
                    }
                } else if (num2 < num1 && num2 < num3){
                    jLabel1.setText(nameList.get(2));
                    jLabel2.setText(nameList.get(3));
                    if (num1 < num3){
                        jLabel3.setText(nameList.get(0));
                        jLabel4.setText(nameList.get(1)); 
                        jLabel5.setText(nameList.get(4));
                        jLabel6.setText(nameList.get(5)); 
                    } else if (num3 < num1){
                        jLabel3.setText(nameList.get(4));
                        jLabel4.setText(nameList.get(5)); 
                        jLabel5.setText(nameList.get(0));
                        jLabel6.setText(nameList.get(1)); 
                    }
                } else if (num3 < num1 && num3 < num2){
                    jLabel1.setText(nameList.get(4));
                    jLabel2.setText(nameList.get(5));
                    if (num1 < num2){
                        jLabel3.setText(nameList.get(0));
                        jLabel4.setText(nameList.get(1)); 
                        jLabel5.setText(nameList.get(2));
                        jLabel6.setText(nameList.get(3)); 
                    } else if (num2 < num1){
                        jLabel3.setText(nameList.get(2));
                        jLabel4.setText(nameList.get(3)); 
                        jLabel5.setText(nameList.get(0));
                        jLabel6.setText(nameList.get(1)); 
                    }
                }
            }
            

        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        backToMain = new javax.swing.JButton();
        backToGame = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(606, 388));
        setResizable(false);

        jInternalFrame1.setTitle("NAME                           MISTAKES");
        jInternalFrame1.setVisible(true);

        jLabel1.setText("-");

        jLabel2.setText("-");

        jLabel3.setText("-");

        jLabel4.setText("-");

        jLabel5.setText("-");

        jLabel6.setText("-");

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addGap(101, 101, 101))
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addContainerGap(98, Short.MAX_VALUE))
        );

        backToMain.setText("BACK TO MAIN");
        backToMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToMainActionPerformed(evt);
            }
        });

        backToGame.setText("BACK TO GAME");
        backToGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToGameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(backToGame)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(backToMain)))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backToMain)
                    .addComponent(backToGame))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(387, 337));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backToGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToGameActionPerformed
        mainHangmanUI main = new mainHangmanUI();
        main.setVisible(true);
        dispose();
        Random rand1 = new Random();
        int randChoice1 = rand1.nextInt(5);
        List<String> sixLetterWords1 = Arrays.asList("BABOON", "HACKER", "VACCUM", "CHANCE", "DAMAGE");
        String wordz1 = sixLetterWords1.get(randChoice1);
        mainHangmanUI.word = wordz1;
        mainHangmanUI.mistakes = 0;
    }//GEN-LAST:event_backToGameActionPerformed

    private void backToMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToMainActionPerformed
        hangmanUI screen = new hangmanUI();
        screen.setVisible(true);
        dispose();
    }//GEN-LAST:event_backToMainActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hangmanScoreboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hangmanScoreboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hangmanScoreboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hangmanScoreboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hangmanScoreboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backToGame;
    private javax.swing.JButton backToMain;
    private javax.swing.JInternalFrame jInternalFrame1;
    public static javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel jLabel2;
    public static javax.swing.JLabel jLabel3;
    public static javax.swing.JLabel jLabel4;
    public static javax.swing.JLabel jLabel5;
    public static javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
}
